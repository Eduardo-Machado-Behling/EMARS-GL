plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "org.jetbrains.kotlin.jvm" version "1.7.21"
    id "org.openjfx.javafxplugin" version "0.0.13"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

// Specify Java version using source and target compatibility
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

tasks.register('runWithDebug', JavaExec) {
    group = "application"
    description = "Runs the application and waits for VS Code to attach a debugger."

    classpath = sourceSets.main.runtimeClasspath
    mainClass = application.mainClass.get()

    jvmArgs = [
        "-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005"
    ]
}


version="4.7"

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "https://dl.bintray.com/kotlin/kotlin-dev" }
}

dependencies {
    implementation 'com.google.guava:guava:31.1-jre'

    // https://mvnrepository.com/artifact/net.sourceforge.argparse4j/argparse4j
    implementation 'net.sourceforge.argparse4j:argparse4j:0.9.0'

    def jogl = '2.3.2'

    implementation "org.jogamp.gluegen:gluegen-rt-main:$jogl"
    implementation "org.jogamp.jogl:jogl-all-main:$jogl"
}

javafx {
    version = "21.0.1"
    modules = ['javafx.controls', 'javafx.graphics']
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

application {
    // Define the main class for the application.
    mainClass = 'Mars'
}
